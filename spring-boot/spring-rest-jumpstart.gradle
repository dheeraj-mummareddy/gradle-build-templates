def local_spring_profile = project.properties['localSpringProfile'] ?: "local"
def spring_cloud_version = project.properties['springCloudVersion'] ?: "Hoxton.SR9"
def gradle_templates_source = project.properties['gradleTemplatesSource'] ?: "https://raw.githubusercontent.com/dheeraj-mummareddy/gradle-build-templates/master/gradle-common"
def test_containers_enabled = project.properties['testContainersEnabled'] ?: "false"
def test_containers_reusable = project.properties['testContainersReusable'] ?: "false"
def configured_containers = project.properties['configuredContainers'] ?: ""
def testContiner_application_initializer_class = project.properties['testContinerApplicationInitializerClass'] ?: ""

// local testing
// def gradle_templates_source = "../../gradle-common"

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.freefair.lombok'
apply plugin: 'org.sonarqube'

apply from: "${gradle_templates_source}/common-utils-tasks.gradle"
apply from: "${gradle_templates_source}/git-common-functions.gradle"
apply from: "${gradle_templates_source}/git-semantic-release.gradle"
apply from: "${gradle_templates_source}/app-monitoring-configuration.gradle"
apply from: "${gradle_templates_source}/java-code-quality.gradle"
apply from: "${gradle_templates_source}/integration-tests.gradle"
apply from: "${gradle_templates_source}/performance-tests.gradle"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

bootJar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Application-Description': project.description,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date().format("EEE MMM dd HH:mm:ss zzz yyyy "),
                'Built-JDK': System.getProperty('java.version'),
                'Created-By': 'Gradle',
                'Git-Commit': getRevision(),
                'Git-Branch': getBranch(),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility
    }
}

springBoot {
    buildInfo {
        properties {
            additional = [
                    'description': project.description,
                    'Built-By': System.getProperty('user.name'),
                    'Git-Commit': getRevision(),
                    'Git-Branch': getBranch(),
                    'Source-Compatibility': sourceCompatibility,
                    'Target-Compatibility': targetCompatibility
            ]
        }
    }
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "${local_spring_profile}"
    args "application.testcontainers.enable=${test_containers_enabled}"
    args "application.testcontainers.reusable=${test_containers_reusable}"
    args "application.testcontainers.containers=${configured_containers}"
    args "application.testcontainers.initializer=${testContiner_application_initializer_class}"
}

task processDocker(type: Copy) {
    description = 'Copies the Dockerfile and replaces tokens'
    project.ext.SPRING_PROFILES_ACTIVE = '${SPRING_PROFILES_ACTIVE}'
    project.ext.GIT_COMMIT = getRevision()
    fileMode = 0755
    from('src/main/docker/')
    into('build/libs/')
    expand(project.properties)
}
build.dependsOn processDocker

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
    }
}
